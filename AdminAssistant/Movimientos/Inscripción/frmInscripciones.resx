<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>